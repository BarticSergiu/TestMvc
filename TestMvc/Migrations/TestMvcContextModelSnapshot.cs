// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestMvc.Data;

#nullable disable

namespace TestMvc.Migrations
{
    [DbContext(typeof(TestMvcContext))]
    partial class TestMvcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestMvc.Models.Persoana", b =>
                {
                    b.Property<int>("PersoanaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersoanaId"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersoanaId1")
                        .HasColumnType("int");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersoanaId");

                    b.HasIndex("PersoanaId1");

                    b.ToTable("Persoana");
                });

            modelBuilder.Entity("TestMvc.Models.Pontaj", b =>
                {
                    b.Property<int>("PontajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PontajId"));

                    b.Property<int>("Data")
                        .HasColumnType("int");

                    b.Property<int>("Durata")
                        .HasColumnType("int");

                    b.Property<string>("Observatii")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SarcinaRefId")
                        .HasColumnType("int");

                    b.HasKey("PontajId");

                    b.HasIndex("SarcinaRefId");

                    b.ToTable("Pontaj");
                });

            modelBuilder.Entity("TestMvc.Models.Sarcina", b =>
                {
                    b.Property<int>("SarcinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SarcinaId"));

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OreEstimate")
                        .HasColumnType("int");

                    b.Property<int>("PersoanaRefId")
                        .HasColumnType("int");

                    b.Property<string>("Prioritate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipSarcina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SarcinaId");

                    b.HasIndex("PersoanaRefId");

                    b.ToTable("Sarcina");
                });

            modelBuilder.Entity("TestMvc.Models.Persoana", b =>
                {
                    b.HasOne("TestMvc.Models.Persoana", null)
                        .WithMany("Persoane")
                        .HasForeignKey("PersoanaId1");
                });

            modelBuilder.Entity("TestMvc.Models.Pontaj", b =>
                {
                    b.HasOne("TestMvc.Models.Sarcina", "Sarcina")
                        .WithMany()
                        .HasForeignKey("SarcinaRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sarcina");
                });

            modelBuilder.Entity("TestMvc.Models.Sarcina", b =>
                {
                    b.HasOne("TestMvc.Models.Persoana", "Persoana")
                        .WithMany()
                        .HasForeignKey("PersoanaRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persoana");
                });

            modelBuilder.Entity("TestMvc.Models.Persoana", b =>
                {
                    b.Navigation("Persoane");
                });
#pragma warning restore 612, 618
        }
    }
}
